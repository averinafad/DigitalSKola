{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2025-04-18T05:41:04.580Z",
    "end": "2025-04-18T05:41:10.358Z",
    "duration": 5778,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bfe58a92-d9b7-4bc1-9197-c4db32a68585",
      "title": "",
      "fullFile": "C:\\Users\\averi\\OneDrive\\Documents\\Mini Boothcamp Digital Skola_QA Engineer\\DigitalSKola\\sesi9_Web UI Automation_Averina\\Test_Sesi9\\sesi9.test.js",
      "file": "\\Test_Sesi9\\sesi9.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a37284a-c0f9-40e4-8e08-22b0a1578872",
          "title": "Sauce Demo Test",
          "fullFile": "C:\\Users\\averi\\OneDrive\\Documents\\Mini Boothcamp Digital Skola_QA Engineer\\DigitalSKola\\sesi9_Web UI Automation_Averina\\Test_Sesi9\\sesi9.test.js",
          "file": "\\Test_Sesi9\\sesi9.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visit SauceDemo, Login, Cek Page Tittle",
              "fullTitle": "Sauce Demo Test Visit SauceDemo, Login, Cek Page Tittle",
              "timedOut": false,
              "duration": 1536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder(). forBrowser('chrome').build();\nawait driver.get('https://www.saucedemo.com');\n\n//Validasi Tittle\nconst title = await driver.getTitle();\nassert.strictEqual(title, 'Swag Labs');\n//Inputs untuk Login\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'));\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'));\nlet buttonlogin = await driver.findElement(By.className('submit-button btn_action'));\nawait inputUsername.sendKeys('standard_user');\nawait inputPassword.sendKeys('secret_sauce');\nawait buttonlogin.click();\n//Validasi Berhasil Login\nlet buttonCart = await driver.wait(\n    until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')),\n    5000 \n);\nawait buttonCart.isDisplayed();\n//Validasi Teks Logo\nlet textAppLogo = await driver.findElement(By.className('app_logo'))\nlet logotext = await textAppLogo.getText()\nassert.strictEqual(logotext,'Swag Labs')\n// await driver.sleep(3000);\n// await driver.quit();",
              "err": {},
              "uuid": "ce49debf-5955-46ac-8ad7-c4a67e55675d",
              "parentUUID": "9a37284a-c0f9-40e4-8e08-22b0a1578872",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sorting Z to A",
              "fullTitle": "Sauce Demo Test Sorting Z to A",
              "timedOut": false,
              "duration": 3119,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Pilih dropdown dan pilih \"Name (Z to A)\"\nconst sortDropdown = await driver.findElement(By.className('product_sort_container'));\nawait sortDropdown.sendKeys('Name (Z to A)');\n// Tunggu hasil sorting tampil\nawait driver.sleep(3000);\n// Ambil semua nama produk\nconst productElements = await driver.findElements(By.className('inventory_item_name'));\nconst productNames = [];\nfor (let el of productElements) {\n    const name = await el.getText();\n    productNames.push(name);\n}\n// Bandingkan urutan Z to A\nconst expectedSorted = [...productNames].sort().reverse();\nassert.deepStrictEqual(productNames, expectedSorted, 'Produk tidak terurut Z ke A');\n\n\nawait driver.sleep(5000);\n// await driver.quit();",
              "err": {
                "message": "AssertionError: Produk tidak terurut Z ke A\n+ actual - expected\n\n  [\n+   'Sauce Labs Backpack',\n+   'Sauce Labs Bike Light',\n+   'Sauce Labs Bolt T-Shirt',\n+   'Sauce Labs Fleece Jacket',\n+   'Sauce Labs Onesie',\n    'Test.allTheThings() T-Shirt (Red)',\n-   'Sauce Labs Onesie',\n-   'Sauce Labs Fleece Jacket',\n-   'Sauce Labs Bolt T-Shirt',\n-   'Sauce Labs Bike Light',\n-   'Sauce Labs Backpack'\n  ]\n",
                "estack": "AssertionError [ERR_ASSERTION]: Produk tidak terurut Z ke A\n+ actual - expected\n\n  [\n+   'Sauce Labs Backpack',\n+   'Sauce Labs Bike Light',\n+   'Sauce Labs Bolt T-Shirt',\n+   'Sauce Labs Fleece Jacket',\n+   'Sauce Labs Onesie',\n    'Test.allTheThings() T-Shirt (Red)',\n-   'Sauce Labs Onesie',\n-   'Sauce Labs Fleece Jacket',\n-   'Sauce Labs Bolt T-Shirt',\n-   'Sauce Labs Bike Light',\n-   'Sauce Labs Backpack'\n  ]\n\n    at Context.<anonymous> (Test_Sesi9\\sesi9.test.js:58:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": " [\n+   \"Test.allTheThings() T-Shirt (Red)\"\n+   \"Sauce Labs Onesie\"\n+   \"Sauce Labs Fleece Jacket\"\n+   \"Sauce Labs Bolt T-Shirt\"\n+   \"Sauce Labs Bike Light\"\n   \"Sauce Labs Backpack\"\n-   \"Sauce Labs Bike Light\"\n-   \"Sauce Labs Bolt T-Shirt\"\n-   \"Sauce Labs Fleece Jacket\"\n-   \"Sauce Labs Onesie\"\n-   \"Test.allTheThings() T-Shirt (Red)\"\n ]\n"
              },
              "uuid": "49bcb887-258a-4ef7-93f1-fadfd0cdc9e9",
              "parentUUID": "9a37284a-c0f9-40e4-8e08-22b0a1578872",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sorting Harga dari Rendah ke Tinggi",
              "fullTitle": "Sauce Demo Test Sorting Harga dari Rendah ke Tinggi",
              "timedOut": false,
              "duration": 1116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Pilih dropdown dan pilih \"Price (low to high)\"\nconst sortDropdown = await driver.findElement(By.className('product_sort_container'));\nawait sortDropdown.sendKeys('Price (low to high)');\n\n// Tunggu hasil sorting tampil\nawait driver.sleep(1000);\n// Ambil semua elemen harga produk\nconst priceElements = await driver.findElements(By.className('inventory_item_price'));\nconst priceValues = [];\nfor (let el of priceElements) {\n    const text = await el.getText(); // Contoh: \"$7.99\"\n    const price = parseFloat(text.replace('$', '')); //melakukan konversi ke number\n    priceValues.push(price);\n}\n// Bandingkan apakah sudah terurut dari rendah ke tinggi\nconst expectedSortedPrices = [...priceValues].sort((a, b) => a - b);\nassert.deepStrictEqual(priceValues, expectedSortedPrices, 'Harga tidak terurut dari rendah ke tinggi');\nawait driver.sleep(5000);\nawait driver.quit();",
              "err": {
                "message": "AssertionError: Harga tidak terurut dari rendah ke tinggi\n+ actual - expected\n\n  [\n+   29.99,\n-   7.99,\n    9.99,\n    15.99,\n+   49.99,\n+   7.99,\n    15.99,\n-   29.99,\n-   49.99\n  ]\n",
                "estack": "AssertionError [ERR_ASSERTION]: Harga tidak terurut dari rendah ke tinggi\n+ actual - expected\n\n  [\n+   29.99,\n-   7.99,\n    9.99,\n    15.99,\n+   49.99,\n+   7.99,\n    15.99,\n-   29.99,\n-   49.99\n  ]\n\n    at Context.<anonymous> (Test_Sesi9\\sesi9.test.js:84:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": " [\n-   29.99\n+   7.99\n   9.99\n   15.99\n+   15.99\n+   29.99\n   49.99\n-   7.99\n-   15.99\n ]\n"
              },
              "uuid": "e3ee3869-ac73-41ef-8c4a-f03b02fd9583",
              "parentUUID": "9a37284a-c0f9-40e4-8e08-22b0a1578872",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce49debf-5955-46ac-8ad7-c4a67e55675d"
          ],
          "failures": [
            "49bcb887-258a-4ef7-93f1-fadfd0cdc9e9",
            "e3ee3869-ac73-41ef-8c4a-f03b02fd9583"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}